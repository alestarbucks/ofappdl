
(define (domain blocks)
  (:requirements :typing)
  (:types block)
  
  (:predicates (on ?v0 - block ?v1 - block)
	(ontable ?v0 - block)
	(clear ?v0 - block)
	(handempty)
	(handfull)
	(holding ?v0 - block)
	(pick-up ?v0 - block)
	(put-down ?v0 - block)
	(stack ?v0 - block ?v1 - block)
	(unstack ?v0 - block ?v1 - block)
  )
  ; (:actions stack unstack put-down pick-up)

  

	(:action pick-up
		:parameters (?x - block)
		:precondition (and (clear ?x)
			(ontable ?x)
			(handempty))
		:effect (and
			(not (ontable ?x))
			(not (clear ?x))
			(not (handempty))
			(handfull)
			(holding ?x))
	)
	

	(:action put-down
		:parameters (?x - block)
		:precondition (and (holding ?x)
			(handfull))
		:effect (and
			(not (holding ?x))
			(clear ?x)
			(handempty)
			(not (handfull))
			(ontable ?x))
	)
	

	(:action stack
		:parameters (?x - block ?y - block)
		:precondition (and (holding ?x)
			(clear ?y)
			(handfull))
		:effect (and
			(not (holding ?x))
			(not (clear ?y))
			(clear ?x)
			(handempty)
			(not (handfull))
			(on ?x ?y))
	)
	

	(:action unstack
		:parameters (?x - block ?y - block)
		:precondition (and (on ?x ?y)
			(clear ?x)
			(handempty))
		:effect (and
			(holding ?x)
			(clear ?y)
			(not (clear ?x))
			(not (handempty))
			(handfull)
			(not (on ?x ?y)))
	)

  

)
        